[
{
	"uri": "//localhost:1313/vi/",
	"title": "AWS OpenSearch Service",
	"tags": [],
	"description": "",
	"content": "Làm việc với Amazon OpenSearch Service - AWS OpenSearch Tổng quan Trong workshop này, bạn sẽ tìm hiểu cách tích hợp Amazon OpenSearch với backend không máy chủ sử dụng AWS Lambda và triển khai một website tĩnh đơn giản trên AWS thông qua S3, CloudFront và ghi nhận thông tin yêu cầu dựa trên mỗi truy vấn tìm kiếm để phân tích các từ khóa tìm kiếm, trạng thái của yêu cầu thông qua CloudWatch.\nNội dung Giới thiệu Các bước chuẩn bị Cấu hình AWS OpenSearch Domain Triển khai backend với AWS Lambda Triển khai website tĩnh với Amazon S3 và CloudFront Xem log ứng dụng bằng Cloudwatch Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-installnode_npm/2.1.1-installnodejs/",
	"title": "Cài đặt Nodejs",
	"tags": [],
	"description": "",
	"content": "Truy cập trang chủ tải xuống của Nodejs Truy cập giao diện tải xuống của nodejs Chọn thiết lập môi trường Windows Chọn tải xuống file cài đặt .msi cho môi trường Windows Cài đặt Node.js và NPM. Khởi chạy trình cài đặt vừa tải xuống bằng cách double-click vào file đó. Node.js Setup Wizard sẽ hiện ra hộp thoại welcome. Click Next. Chấp thuận điều khoản và click Next Chọn vị trí lưu các tài nguyên cài đặt của Node.js và ấn Next liên tục. Chọn Next và quá trình cài đặt sẽ diễn ra tự động và khi hoàn thành sẽ hiện ra cửa sổ sau Để kiểm tra Node.js đã cài đặt thành công chưa, thực thi câu lệnh sau: node -v\rCâu lệnh sẽ hiển thị phiên bản của node.js trên máy của bạn. Dùng lệnh sau để kiểm tra phiên bản npm:\nnpm -v\r"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-installnode_npm/",
	"title": "Chuẩn bị môi trường nodejs và trình soạn thảo văn bản VScode",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tải xuống nodejs và ide vscode để thiết lập môi trường ứng dụng cho workshop trên nền tảng Windows\nNội dung Cài đặt Node Cài đặt VScode "
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "OpenSearch là một công cụ tìm kiếm và phân tích dữ liệu phân tán mã nguồn mở được phát triển bởi Amazon. OpenSearch được thiết kế để dễ dàng tích hợp vào ứng dụng, đảm bảo khả năng mở rộng, bảo mật và hỗ trợ phân tích dữ liệu theo thời gian thực. Trong workshop này, bạn sẽ học cách tích hợp AWS OpenSearch vào một ứng dụng serverless đơn giản sử dụng AWS Lambda, S3 và CloudFront.\nViệc sử dụng OpenSearch mang lại nhiều lợi ích vượt trội so với các phương pháp tìm kiếm truyền thống bằng cơ sở dữ liệu:\nTìm kiếm toàn văn (full-text search) với khả năng đánh giá độ liên quan Index và truy vấn dữ liệu theo thời gian thực Khả năng mở rộng linh hoạt với tập dữ liệu lớn Tích hợp chặt chẽ với các dịch vụ AWS như Lambda, IAM, và CloudWatch Hỗ trợ bảo mật nâng cao với kiểm soát truy cập chi tiết và mã hóa Trực quan hóa dữ liệu dễ dàng với OpenSearch Dashboards Là dịch vụ được quản lý toàn phần, có tính sẵn sàng cao và tự động sao lưu Triển khai tính năng tìm kiếm mà không cần quản lý hạ tầng phức tạp Với những lợi ích trên, OpenSearch là lựa chọn lý tưởng cho các ứng dụng cần chức năng tìm kiếm mạnh mẽ, linh hoạt mà vẫn tối ưu chi phí và công sức vận hành. Workshop này sẽ hướng dẫn bạn từng bước cấu hình OpenSearch, index dữ liệu, truy vấn bằng Lambda, và hiển thị kết quả trên website tĩnh được triển khai trên AWS.\n"
},
{
	"uri": "//localhost:1313/vi/3-configurationawsopensearchdomain/3.1-downloadsrc/",
	"title": "Tải tài nguyên",
	"tags": [],
	"description": "",
	"content": " Di chuyển vào vị trí bạn muốn tải xuống tài nguyên dự án, sau đó mở Gitbash hoặc Command Line tại vị trí hiện tại và thực thi câu lệnh sau git clone https://github.com/DannyCandy/AWSOpensearchApplication.git\rSử dụng dữ liệu mặc định của MongoDB Atlas. Ở bước này ta sẽ sử dụng dữ liệu sample của MongoDB Atlas để thêm dữ liệu vào OpenSearch Domain, dữ liệu này có hơn 20000 bản ghi sẽ giúp ta hiểu rõ hơn sức mạnh và sự hiệu quả của việc ứng dụng OpenSearch vào các công cụ tìm kiếm, chẳng hạn như dự án ta vừa tải xuống. Truy cập vào trang chủ MongoDB Atlas và tạo tài khoản giao diện đăng nhập MongoDB Atlas. Sau khi tạo tài khoản thành công và đăng nhập trang chủ MongoDB Atlas ta sẽ tạo mới một Clusters Với cluster vừa tạo, ta đã có một Databases có tên sample_mflix sẵn có của MongoDB Atlas với 6 collections. Ta chọn collection movies với 21349 bản ghi để cấu hình index và dữ liệu đầu vào cho OpenSearch Lấy chuỗi kết nối tới cơ sở dữ liệu từ MongoDB Atlas Tại trang chủ MongoDB Atlas, ta chọn tab Database Access ở thanh điều hướng bên trái Chọn nút Edit, trong hộp thoại Edit User vừa hiện ra, ta chọn Edit Password, sau đó ta cập nhật mật khẩu người dùng và cuộn xuống bên dưới, chọn Update User. Hãy lưu ý ghi nhớ mật khẩu này để dùng cho các bước sau Tại trang chủ MongoDB Atlas mà ta vừa truy cập, ta chọn tab Overview rồi chọn Connect Hộp thoại Connect to Cluster hiện ra, ta chọn vào tùy chọn Driver trong mục Connect to your application. Sau đó ta sao chép nội dung connection string tại mục Add your connection string into your application code và thay thế nội dung password đó bằng mật khẩu mà ta đã tạo trước đó, ta sẽ được một connection string hoàn chỉnh. Sau khi đã có connection string ta mở dự án bằng VScode. Ta mở folder backend của dự án vào tạo mới 1 file .env trong folder này với các hằng số MONGO_CONNECT_URL và PORT, với PORT mang giá trị 5000 và MONGO_CONNECT_URL là connection string mà ta vừa lấy được. Sau khi cấu hình hoàn tất các hằng số trên, ta mở terminal trong VScode lên. Di chuyển vào folder backend bằng lệnh: cd .\\backend\\ Thực hiện lệnh npm i và npm install dotenv, sau khi thực hiện thành công, giao diện sẽ như sau Sau đó ta mở file index.js trong folder backend và thêm các dòng code sau ngay phía dưới phần import import dotenv from 'dotenv';\rdotenv.config();\r"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "\rTrong workshop này bạn cần cấu hình và thiết lập môi trường để tải xuống file dự án như cài đặt node, npm, git, VScode và tạo IAMRole trên tài khoản aws.\nĐể tích hợp OpenSearch và tìm hiểu về dịch vụ này, các bước sau sẽ hướng dẫn bạn cụ thể các bước tiên quyết để làm được điều này.\nNội dung Cài đặt node, npm Cài đặt git Tạo IAM Role "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-installgit/",
	"title": "Cài đặt Git",
	"tags": [],
	"description": "",
	"content": "Truy cập trang chủ tải xuống của Git Truy cập giao diện tải xuống của Git Chọn dòng chữ có màu vàng cam \u0026ldquo;Click here to download\u0026rdquo; để tải xuống trình cài đặt Git Khởi chạy trình cài đặt Git. Khởi chạy trình cài đặt vừa tải xuống bằng cách double-click vào file đó. Git Setup Wizard sẽ hiện ra hộp thoại welcome. Click Next. Chấp thuận điều khoản và click Next Chọn vị trí lưu các tài nguyên cài đặt của Git và ấn Next liên tục. Chọn Next và quá trình cài đặt sẽ diễn ra tự động và khi hoàn thành sẽ hiện ra cửa sổ sau Để kiểm tra Git đã cài đặt thành công chưa, thực thi câu lệnh sau trong CLI: git --version\r"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-installnode_npm/2.1.2-installvscode/",
	"title": "Cài đặt VScode",
	"tags": [],
	"description": "",
	"content": "Truy cập trang chủ tải xuống của VScode Truy cập giao diện tải xuống của VScode Chọn file tải xuống cho môi trường Windows Cài đặt VScode. Khởi chạy trình cài đặt vừa tải xuống bằng cách double-click vào file đó và làm theo các hướng dẫn cài đặt của trình cài đặt cho đến khi quá trình cài đặt hoàn tất. Sau khi hoàn các bước trên bạn có thể khởi chạy ứng dụng VScode như sau. "
},
{
	"uri": "//localhost:1313/vi/3-configurationawsopensearchdomain/3.2-setupdomain/",
	"title": "Thiết lập Domain OpenSearch",
	"tags": [],
	"description": "",
	"content": " Truy cập vào bảng điều khiển AWS (AWS Console) giao diện bảng điều khiển AWS và chọn dịch vụ Amazon OpenSearch Service\nTại trang chủ dịch vụ Amazon OpenSearch Service\nTa chọn Managed clusters tại mục Get started và nhấn nút Create domain Tại cửa sổ khởi tạo opensearch domain, ta điền các trường thông tin theo hướng dẫn bên dưới Trước hết, ta điền tên của domain Tiếp đến ta chọn tùy chọn Standard create và template Dev/test Sau đó ta chọn tùy chọn Domain without standby và chọn 1-Az để tiết kiệm chi phí trong quá trình tìm hiểu. Ta sẽ thực hiện tiếp các bước tiếp theo dựa trên hướng dẫn sau, với các trường không được lưu ý trong hướng dẫn, ta sẽ giữ thiết lập mặc định Tại mục Number of data nodes ta chọn giá trị 1 vì trước đó ta đã thiết lập sử dụng 1-Az Ở mục thiết lập Network ta chọn cấu hình Public access Ta sẽ thực hiện tiếp các bước tiếp theo dựa trên hướng dẫn sau, với các trường không được lưu ý trong hướng dẫn, ta sẽ giữ thiết lập mặc định và cuối cùng là nhấn Create. Lưu ý tại bước thiết lập Master username và Master password, bạn hãy chú ý và ghi nhớ các trường này để ta cấu hình biến môi trường cho dự án ở các bước sau Sau cùng, ta sẽ đợi quá trình khởi tạo Domain hoàn tất, quá trình này sẽ mất khoảng 10-15 phút. Sau khi quá trình này kết thúc, domain được khởi tạo thành công sẽ trông như sau. Lúc này ta sẽ có một URL để truy cập OpenSearch dashboard, đây là nơi ta có thể kiểm soát, trực quan hóa và theo dõi các dữ liệu, index được tạo trong Domain OpenSearch này. "
},
{
	"uri": "//localhost:1313/vi/3-configurationawsopensearchdomain/3.3-configindex/",
	"title": "Cấu hình Index",
	"tags": [],
	"description": "",
	"content": " Mở folder dự án mà ta đã tải xuống từ github trong VScode, di chuyển đến folder backend Ta sẽ sử dụng đường dẫn kết nối tới OpenSearch Domain vừa tạo để cấu hình index, dữ liệu đầu vào cho OpenSearch engine khi khởi chạy dự án Trở lại dự án, ta mở file .env mà trước đó ta đã tạo trong folder backend và thêm các hằng số môi trường như OPSURLCLIENT, PWDOPS và USERNAMOPS với các giá trị lần lượt là URL ở bước ngay phía trên, tài khoản và mật khẩu mà bạn đã cấu hình khi tạo Domain OpenSearch. Tiếp đến, ta mở Terminal trong VScode và lần lượt thực thi lệnh npm run dev, sau khi thực hiện các lệnh, quá trình thực thi thu thập và truyền tải dữ liệu từ MongoDB sang OpenSearch Domain mà ta đã tạo trước đó sẽ diễn ra. Khi thực hiện thành công, giao diện sẽ trông như sau Kiểm tra index vừa được tạo trên OpenSearch Dashboard Truy cập vào dịch vụ OpenSearch trên bảng điều khiển AWS và truy cập tới URL sau. Sau khi truy cập URL này, giao diện quản lý Domain OpenSearch sẽ hiện ra, lúc này ta nhấn chọn OpenSearch Dashboard Tiếp theo ta chọn Add your data Tiếp theo ta chọn Create index pattern Tại đây ta sẽ thấy tồn tại một index có tên movies-optimized, đây là tên index đã được cấu hình tạo ra trong Domain này từ source code trong dự án. Khi khởi tạo thành công, chắc chắn bạn sẽ nhìn thấy tên index này Chuẩn bị triển khai backend trên Lambda Sau khi đã tạo index thành công trên OpenSearch Domain, ta sẽ quay lại dự án và xóa bỏ hoặc comment 2 dòng code mà trước đó ta đã thêm vào file dự án vì việc triển khai trên môi trường serverless như Lambda sẽ không cấu hình sử dụng biến môi trường như thế này. "
},
{
	"uri": "//localhost:1313/vi/3-configurationawsopensearchdomain/",
	"title": "Cấu hình OpenSearch",
	"tags": [],
	"description": "",
	"content": "Ở bước này, ta sẽ tải xuống mã nguồn dự án từ Github và tiến hành tạo, cấu hình OpenSearch Domain tại bảng điều khiển AWS và thiết lập index, dữ liệu đầu vào cho domain.\nContents 3.1. Tải xuống dự án\n3.2. Cấu hình OpenSearch Domain\n3.3. Cấu hình OpenSearch Index\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.3-createiamrole/",
	"title": "Tạo IAM Role",
	"tags": [],
	"description": "",
	"content": "Truy cập dịch vụ IAM trên AWS Chọn tùy chọn Policies trên thanh điều hướng bên trái của giao diện dịch vụ IAM Nhấn nút Create policy Trong hộp thoại Create policy. Chọn tùy chọn JSON trong phần Policy editor và dán phần nội dung sau vào, lưu ý thay thế phần nội dung \u0026quot;YourAccountID\u0026quot; bằng ID tài khoản AWS của bạn {\r\"Version\": \"2012-10-17\",\r\"Statement\": [\r{\r\"Effect\": \"Allow\",\r\"Action\": [\r\"logs:CreateLogGroup\",\r\"logs:DescribeLogGroups\"\r],\r\"Resource\": \"arn:aws:logs:ap-southeast-1::*\"\r},\r{\r\"Effect\": \"Allow\",\r\"Action\": [\r\"logs:CreateLogStream\",\r\"logs:PutLogEvents\",\r\"logs:DescribeLogStreams\"\r],\r\"Resource\": [\r\"arn:aws:logs:ap-southeast-1::log-group:/movie-search/analytics:*\"\r]\r}\r]\r}\rChọn Next và đặt tên Policy tại phần Policy name bằng một cái tên tùy ý và cuộn xuống phía dưới, chọn Create policy Chờ cho quá trình tạo Policy diễn ra thành công, trở về trang chủ tính năng Policies của dịch vụ IAM đảm bảo policy được tạo thành công. Thiết lập Policy vừa tạo vào IAM Role Chọn tùy chọn Roles trên thanh điều hướng bên trái của giao diện dịch vụ IAM Nhấn nút Create role Trong hộp thoại Create role. Chọn Trusted entity type là AWS Service và chọn Use case là Lambda Tại step Add permissions, tại tùy chọn Filter by Type chọn Customer managed và chọn policy mà ta vừa tạo ban nãy sau đó ấn Next Xem lại các thiết lập mà bạn đã cấu hình cho role, điền tên Role tùy ý và chú ý cái tên này để sử dụng ở các bước tiếp theo, sau đó nhấn Create Role. Đảm bảo quá trình tạo Role thành công. "
},
{
	"uri": "//localhost:1313/vi/4-awslambda/",
	"title": "Cấu hình backend AWS Lambda",
	"tags": [],
	"description": "",
	"content": " Tạo và upload dự án lên Lambda Function Đăng nhập vào bảng điều khiển AWS và chọn dịch vụ Lambda, chọn Functions và chọn Create funtion Trong cửa sổ tạo lambda function hiện ra, chọn tùy chọn Author from scratch Tiếp đến, đặt tên cho lambda function và thiết lập cấu hình như hướng dẫn bên dưới, các trường không được đề cập sẽ giữ thiết lập mặc định, sau đó chọn Create Chờ cho đến khi quá trình khởi tạo lambda function hoàn tất, ta sẽ nhận được thông báo như sau Tiếp theo, ta mở folder dự án, truy cập vào folder backend, lưu ý chọn những file sau và tiến hành nén các file đó thành định dạng .zip Trở lại giao diện lambda function mà ta vừa tạo, chọn tab Code và chọn Upload from, sau khi thấy cửa sổ upload file hiện ra, ta kéo thả file .zip vừa nén vào cửa sổ này để import source code vào lambda function. Cấu hình lambda function Tại giao diện lambda function, ta cuộn trang xuống phần Runtime settings và chọn Edit Tại đây ta chỉnh sửa đường dẫn để lambda biết được file entry của dự án nằm ở đâu và thực thi chúng và chọn Save Tiếp theo ta cuộn trang lên phần Code source và cấu hình biến môi trường cho dự án Tại đây, ta sẽ cấu hình các biến môi trường mà trước đây ta đã cấu hình ở file .env trong folder backend của dự án. Sau khi cấu hình xong, chọn Save Khi đã cấu hình thành công biến môi trường, chọn tab Configuration và thực hiện theo hướng dẫn để tạo function URL. Sau đó ta cấu hình Policy như sau để cho phép truy cập từ bên ngoài như dịch vụ CloudFront truy cập vào lambda function. Chọn Save Sau khi cấu hình đúng theo hướng dẫn, lambda sẽ khởi tạo một URL function cho phép các ứng dụng frontend có thể truy cập vào backend trong lambda function Tiếp theo chúng ta sẽ cấu hình quyền cho lambda function có thể ghi log vào Cloudwatch những từ khóa tìm kiếm, trạng thái request tìm kiếm mà client thực hiện. Qua đó chúng ta có thể dựa trên những log này để tiến hành phân tích đánh giá hành vi người dùng cũng như nhận biết trạng thái của server. Tại mục chọn Role cho lambda function, ta sẽ sử dụng Role đã tạo ở bước 2 Các bước chuẩn bị "
},
{
	"uri": "//localhost:1313/vi/5-hostingstaticwebsite/",
	"title": "Cấu hình frontend",
	"tags": [],
	"description": "",
	"content": " Cấu hình và upload dự án lên AWS S3 Mở folder frontend của dự án, tạo file môi trường .env.production và thêm biến môi trường với giá trị chính là function URL của lambda function mà ta đã tạo trước đó Sau đó ta thực hiện build frontend dự án bằng lệnh npm run build. Khi build thành công, folder dist sẽ được tạo ra Đăng nhập vào bảng điều khiển AWS và chọn dịch vụ S3, chọn Create bucket Trong cửa sổ tạo s3 bucket hiện ra, ta hãy thực hiện theo các lưu ý trong hướng dẫn sau, những trường không được lưu ý sẽ giữ thiết lập mặc định Một khi bucket được khởi tạo thành công, ta truy cập bucket vừa tạo và chọn Upload, lúc này ta sẽ mở folder dist của dự án mà ta đã build ra ở bước trước đó và upload các file trong folder này vào bucket. Sau khi upload thành công, ta kiểm tra lại các file vừa upload và xác nhận upload Sau đó, tại giao diện chính của bucket vừa tạo, chọn tab Permissions, chọn Edit. Trong cửa sổ Edit bucket policy hiện ra, ta sẽ chỉnh sửa policy như sau để cho phép CloudFront truy cập các tài nguyên frontend của website mà ta vừa upload lên S3 bucket, lưu ý thay thế YourBucketName thành tên bucket hiện tại của bạn. {\r\"Version\": \"2012-10-17\",\r\"Statement\": [\r{\r\"Sid\": \"AllowCloudFrontAccess\",\r\"Effect\": \"Allow\",\r\"Principal\": \"*\",\r\"Action\": \"s3:GetObject\",\r\"Resource\": \"arn:aws:s3:::/*\"\r}\r]\r}\rCấu hình Cloudfront phân phối nội dung trang web Đăng nhập vào bảng điều khiển AWS và chọn dịch vụ CloudFront, chọn Create distribution Trong cửa sổ khởi tạo distribution hiện ra, ta sẽ cấu hình các trường được lưu ý trong hướng dẫn sau, các trường không được lưu ý sẽ giữ cấu hình mặc định Tại bước cấu hình Origin, ta chọn bucket trong S3 mà ta đã tạo ở bước trước đó Phần còn lại của việc cấu hình distribution, ta thực hiện như sau Sau khi xác nhận cấu hình, cloudfront sẽ tạo ra một Distribution domain name cho phép chúng ta truy cập domain từ internet. Tuy nhiên cần chờ cho quá trình triển khai trở nên hoàn tất. Tiếp theo, ta sẽ cấu hình cloudfront để truy cập các tài nguyên website trong S3 và entry point của website. Trong mục Setting, chọn Edit, tại cửa sổ chỉnh sửa cấu hình hiện ra, ta sẽ chỉ định file entry của website tại mục Default root object Vậy là chúng ta đã hoàn tất toàn bộ cấu hình để triển khai dự án trên các dịch vụ AWS. Giờ chúng ta sẽ chờ cho quá trình triển khai domain của CloudFront hoàn tất, ta sẽ trải nghiệm website thành quả.\nKhi quá trình triển khai hoàn tất, sử dụng Distribution domain name để truy cập thông qua internet, ta sẽ truy cập được giao diện website của dự án, tại đây hãy thử tìm kiếm các bộ phim theo từ khóa. Chúng ta sẽ thấy được cách ứng dụng mạnh mẽ full-text search engine của OpenSearch trong việc tìm kiếm và trả về kết quả một cách nhanh chóng và hiệu quả trên một khối lượng dữ liệu lớn. Ngoài ra full-text search còn hỗ trợ chúng ta tìm kiếm từ khóa gần đúng, các kết quả gần khớp với từ khóa sẽ được highlight màu vàng.\n"
},
{
	"uri": "//localhost:1313/vi/6-applicationlogwithcloudwatch/",
	"title": "Xem log ở CloudWatch",
	"tags": [],
	"description": "",
	"content": " Đăng nhập vào bảng điều khiển AWS và chọn dịch vụ CloudWatch, chọn Logs và chọn Log groups, tại đây trong cửa sổ log group bên phải bạn sẽ thấy có log group /movie-search/analytics đây là group log đã được cấu hình trong backend của dự án, mỗi khi bạn thực hiện truy vấn tìm kiếm, các từ khóa tìm kiếm, trạng thái request đến OpenSearch Domain sẽ được ghi lại ở đây. Tiếp theo, chọn search-logs, tại đây bạn sẽ thấy chi tiết log được ghi lại. "
},
{
	"uri": "//localhost:1313/vi/7-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa OpenSearch Domain Truy cập giao diện quản trị dịch vụ OpenSearch\nClick Domains. Click chọn domain mà bạn vừa tạo trong quá trình thực hiện bài lab. Click Delete. Làm theo hướng dẫn của cửa sổ hiện ra, sau đó click Delete để xác nhận. Xóa Lambda function Truy cập giao diện quản trị dịch vụ Lambda\nClick Functions. Click chọn lambda function mà bạn vừa tạo. Click chọn Actions, chọn Delete function trong danh sách hiện ra và xác nhận xóa. Xóa CloudFront distribution Truy cập giao diện quản trị dịch vụ CloudFront\nClick Distribution. Chọn distribution mà bạn đã tạo trong quá trình làm lab, chọn Disable để vô hiệu hóa domain trước khi xóa. Sau khi disable thành công domain, chọn Delete để xóa và xác nhận xóa domain. Xóa S3 bucket Truy cập giao diện quản trị dịch vụ System Manager - Session Manager. Click tab Preferences. Click Edit. Kéo chuột xuống dưới. Tại mục S3 logging. Bỏ chọn Enable để tắt tính năng logging. Kéo chuột xuống dưới. Click Save. Truy cập giao diện quản trị dịch vụ S3 Click chọn S3 bucket chúng ta đã tạo cho bài thực hành. Click Empty. Điền permanently delete, sau đó click Empty để tiến hành xóa object trong bucket. Click Exit. Sau khi xóa hết object trong bucket, click Delete Điền tên S3 bucket, sau đó click Delete bucket để tiến hành xóa S3 bucket. Xóa IAM Role và policy Truy cập giao diện quản trị dịch vụ IAM\nClick tab Policies. Click Filter by Type và chọn Customer managed. Tìm kiếm policy bạn đã tạo ở bước 2 và chọn Delete, xác nhận để xóa policy. Click tab Roles Chọn role mà bạn tạo trong quá trình thực hiện lab, chẳng hạn: latestRule. Chọn Delete Điền tên của role và xác nhận xóa. "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]